{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { contactsReducer } from \"./contacts/slice\";\nimport { authReducer } from \"./auth/slice\";\nimport { filterReducer } from \"./contacts/filterSlice\";\nconst middleware = [...getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n  }\n})];\n\n// Persisting token field from auth slice to localstorage\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"]\n};\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n    filter: filterReducer\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\"\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","getDefaultMiddleware","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","contactsReducer","authReducer","filterReducer","middleware","serializableCheck","ignoredActions","authPersistConfig","key","whitelist","store","reducer","auth","contacts","filter","devTools","process","env","NODE_ENV","persistor"],"sources":["/Users/olehstefanyk/Desktop/GoIT/goit-react-hw-08-phonebook/src/redux/store.js"],"sourcesContent":["import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { contactsReducer } from \"./contacts/slice\";\nimport { authReducer } from \"./auth/slice\";\nimport { filterReducer } from \"./contacts/filterSlice\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\n// Persisting token field from auth slice to localstorage\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n    filter: filterReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,oBAAoB,QAAQ,kBAAkB;AACvE,SACEC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,aAAa,QAAQ,wBAAwB;AAEtD,MAAMC,UAAU,GAAG,CACjB,GAAGb,oBAAoB,CAAC;EACtBc,iBAAiB,EAAE;IACjBC,cAAc,EAAE,CAACZ,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;EACpE;AACF,CAAC,CAAC,CACH;;AAED;AACA,MAAMQ,iBAAiB,GAAG;EACxBC,GAAG,EAAE,MAAM;EACXR,OAAO;EACPS,SAAS,EAAE,CAAC,OAAO;AACrB,CAAC;AAED,OAAO,MAAMC,KAAK,GAAGpB,cAAc,CAAC;EAClCqB,OAAO,EAAE;IACPC,IAAI,EAAEnB,cAAc,CAACc,iBAAiB,EAAEL,WAAW,CAAC;IACpDW,QAAQ,EAAEZ,eAAe;IACzBa,MAAM,EAAEX;EACV,CAAC;EACDC,UAAU;EACVW,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK;AACrC,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAG3B,YAAY,CAACkB,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}